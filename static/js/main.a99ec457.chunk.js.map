{"version":3,"sources":["components/Header/Header.jsx","components/Search/Search.jsx","components/NotesList/Note/Note.jsx","components/NotesList/NotesList.jsx","components/AddNoteForm/AddNoteForm.jsx","utils/randomGenerate.js","components/App/App.js","index.js"],"names":["Header","className","Search","props","htmlFor","onChange","e","addQuery","target","value","type","id","Note","note","title","text","onClick","updateNote","onUpdateNote","size","deleteNote","onDeleteNote","UpdatingNote","state","changeTitle","event","changeHandler","changeText","property","setState","saveChanges","data","cancelChanges","this","React","Component","NotesList","items","map","item","condition","updated","key","AddNoteForm","addNote","preventDefault","randomGenerate","min","max","Math","floor","random","App","minId","maxId","notes","query","newNote","generateId","filter","index","findIndex","slice","toLowerCase","searchFilter","length","includes","idCollection","Set","has","renderedItems","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a99ec457.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return (\n      <div className=\"header\">\n        <h1>Notes</h1>\n      </div>\n  )\n}","import React from \"react\";\n\nexport const Search = (props) => {\n\n    const addQuery = (e) => {\n        props.addQuery(e.target.value);\n    }\n\n    return (\n      <div className='form-group'>\n          <label htmlFor=\"searchInput\" className=\"col-sm-2 col-form-label\">Search</label>\n          <input onChange={addQuery} type=\"text\" id=\"searchInput\"/>\n      </div>\n    )\n}","import React from \"react\";\nimport {FileIcon, PencilIcon, TrashcanIcon, XIcon} from \"@primer/octicons-react\";\n\nexport const Note = (props) => {\n  const {id, title, text}  = props.note;\n\n  const onDeleteNote = (id) => {\n      props.deleteNote(id);\n  }\n\n  const onUpdateNote = (id) => {\n    props.updateNote(id);\n  }\n\n  return (\n      <div className=\"card\">\n          <div className=\"card-body\">\n              <h5 className=\"card-title\">{`${title}`}</h5>\n              <p className=\"card-text\">{text}</p>\n              <button className=\"btn btn-outline-info btn-sm mr-1\" onClick={() => onUpdateNote(id) }>\n                  <PencilIcon size={16} />\n              </button>\n              <button className=\"btn btn-danger btn-sm\" onClick={() => onDeleteNote(id) } type=\"button\">\n                  <TrashcanIcon size={16} />\n              </button>\n          </div>\n      </div>\n  )\n}\n\nexport class UpdatingNote extends React.Component {\n\n    state = {\n        title: this.props.note.title,\n        text: this.props.note.text,\n    }\n\n\n    changeTitle = (event) => {\n        this.changeHandler(event, \"title\")\n    }\n\n    changeText = (event) => {\n        this.changeHandler(event, \"text\")\n    }\n\n    changeHandler = (event, property) => {\n        const value = event.target.value;\n        this.setState({\n            [property]: value,\n        })\n    }\n\n    saveChanges = () => {\n        const data = {\n            id: this.props.note.id,\n            title: this.state.title,\n            text: this.state.text,\n        }\n\n        this.props.saveChanges(data);\n    }\n\n    cancelChanges = () => {\n        this.props.cancelChanges();\n    }\n\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <input className=\"card-title\" type=\"text\" onChange={this.changeTitle} value={`${this.state.title}`} />\n                    <input className=\"card-text mb-2\" type=\"text\" onChange={this.changeText} value={this.state.text} />\n                    <button className=\"btn btn-outline-success btn-sm mr-1\" onClick={this.saveChanges}>\n                        <FileIcon size={16} />\n                    </button>\n                    <button className=\"btn btn-outline-warning btn-sm\" onClick={this.cancelChanges}>\n                        <XIcon size={16} />\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Note, UpdatingNote} from \"./Note/Note\";\n\nexport const NotesList = (props) => {\n\n    const items = props.data.map( item => {\n        const condition = props.updated === item.id;\n        return (\n            <div className=\"col-sm-4 mb-2\" key={item.id}>{\n                condition ?\n                    <UpdatingNote\n                        note={item}\n                        saveChanges={props.saveChanges}\n                        cancelChanges={props.cancelChanges} /> :\n                    <Note\n                        note={item}\n                        deleteNote={props.deleteNote}\n                        updateNote={props.updateNote}\n                    />\n            }</div>\n        )\n    })\n\n    return (\n      <div className=\"container\">\n          <div className=\"row\">\n              {items}\n          </div>\n      </div>\n    )\n}","import React from \"react\";\nimport {PlusIcon} from \"@primer/octicons-react\";\n\nexport class AddNoteForm extends React.Component {\n  state = {\n      title: \"Title\",\n      text: \"Type note...\",\n  }\n\n    changeTitle = (event) => {\n      this.changeHandler(event, \"title\")\n    }\n\n    changeText = (event) => {\n        this.changeHandler(event, \"text\")\n    }\n\n    addNote = (event) => {\n        event.preventDefault();\n        this.props.addNote({\n            title: this.state.title,\n            text: this.state.text,\n        })\n    }\n\n    changeHandler = (event, property) => {\n      const value = event.target.value;\n      this.setState({\n          [property]: value,\n      })\n    }\n\n    render() {\n        return (\n            <form>\n                <div className=\"form-row\">\n                    <input\n                        className=\"form-control mb-2\"\n                        type=\"text\"\n                        onChange={this.changeTitle}\n                        value={this.state.title}\n                    />\n                </div>\n                <div className=\"form-row mb-2\">\n                    <textarea\n                        className=\"form-control\"\n                        onChange={this.changeText}\n                        value={this.state.text}>\n                    </textarea>\n                </div>\n                <div className=\"form-row\">\n                    <button className=\"btn btn-outline-success btn-sm\" onClick={this.addNote} type=\"send\">\n                        <PlusIcon size={16} />\n                    </button>\n                </div>\n            </form>\n        )\n    }\n}","export const randomGenerate = (min = 0, max = 0) => {\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n}","import React from \"react\";\nimport {Header} from \"../Header/Header\";\nimport {Search} from \"../Search/Search\";\nimport {NotesList} from \"../NotesList/NotesList\";\nimport {AddNoteForm} from \"../AddNoteForm/AddNoteForm\";\nimport { randomGenerate } from  \"../../utils/randomGenerate\";\n\nexport class App extends React.Component {\n\n    minId = 5;\n    maxId = 100;\n\n    state = {\n        notes:[\n            { id:\"1\", title: \"Title\", text:\"Something intersting things\" },\n            { id:\"2\", title: \"Title\", text:\"Something intersting things\" },\n            { id:\"3\", title: \"Title\", text:\"Something intersting things\" },\n            { id:\"4\", title: \"Title\", text:\"Something intersting things\" }\n        ],\n        updated: false,\n        query: \"\",\n    }\n\n    generateId() {\n        let id;\n        const idCollection = new Set(this.state.notes.map(note => note.id));\n\n        do {\n            id = randomGenerate(this.minId, this.maxId);\n        } while( idCollection.has(id) )\n\n        return id;\n    }\n\n    addNote = (note) => {\n        const id = this.generateId();\n\n        const newNote = {\n            id,\n            title: note.title,\n            text: note.text,\n        }\n\n        this.setState((state) => {\n            return {\n                notes: [...this.state.notes, newNote]\n            }\n        })\n    }\n\n    deleteNote = (id) => {\n\n        this.setState((state) => {\n            return {\n                notes: this.state.notes.filter(note => note.id !== id),\n            }\n        })\n    }\n\n    updateNote = (id) => {\n        this.setState({\n            updated: id,\n        })\n    }\n\n    saveChanges = (data) => {\n        this.setState( (state) => {\n            const index = state.notes.findIndex(item => item.id === data.id);\n            const notes = [...state.notes.slice(0, index), data, ...state.notes.slice(index + 1)];\n\n            return {\n                updated: false,\n                notes,\n            }\n        })\n    }\n\n    cancelChanges = () => {\n        this.setState({\n            updated: false,\n        })\n    }\n\n    addQuery = (query) => {\n        this.setState({\n            query: query.toLowerCase(),\n        })\n    }\n\n    searchFilter = (query, data) => {\n        if (query.length === 0) {\n            return data;\n        }\n\n        return data.filter(item => item.title.toLowerCase().includes(query)\n                                    || item.text.toLowerCase().includes(query));\n    }\n\n    render() {\n\n        const renderedItems = this.searchFilter(this.state.query, this.state.notes);\n\n        return (\n            <div className=\"container\">\n                <Header/>\n                <div className=\"row text-center mb-3\">\n                    <div className=\"col-sm\">\n                        <Search addQuery={this.addQuery}/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-3  mb-3\" >\n                        <AddNoteForm addNote={this.addNote}/>\n                    </div>\n                    <div className=\"col-sm-9\">\n                        <NotesList\n                            data={renderedItems}\n                            deleteNote={this.deleteNote}\n                            updateNote={this.updateNote}\n                            updated={this.state.updated}\n                            saveChanges={this.saveChanges}\n                            cancelChanges={this.cancelChanges}\n                            query={this.state.query}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport {App} from \"./components/App/App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}